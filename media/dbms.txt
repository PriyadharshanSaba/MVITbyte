####### COMPANY DATABASE #######

CREATE TABLE EMPLOYEE
(SSN NUMBER(9),
NAME VARCHAR(25),
ADDRESS VARCHAR(25),
SEX CHAR,
SALLARY NUMBER(10,2),
SUPERSSN NUMBER(9),
DNO NUMBER(2),
CONSTRAINT PK_E PRIMARY KEY (SSN),
CONSTRAINT FK_E FOREIGN KEY (SUPERSSN)
REFERENCES EMPLOYEE (SSN) ON DELETE CASCADE);


CREATE TABLE DEPARTMENT
(DNO NUMBER(2),
DNAME VARCHAR(25),
MGRSSN NUMBER(9),
MGRSTARTDATE DATE,
CONSTRAINT PK_D PRIMARY KEY (DNO),
CONSTRAINT FK_D FOREIGN KEY (MGRSSN)
REFERENCES EMPLOYEE (SSN) ON DELETE CASCADE);


CREATE TABLE DLOCATION 
(DNO NUMBER(2),
DLOC VARCHAR(25),
CONSTRAINT PK_DL PRIMARY KEY(DNO,DLOC),
CONSTRAINT FK_DL FOREIGN KEY (DNO)
REFERENCES DEPARTMENT (DNO) ON DELETE CASCADE);


CREATE TABLE PROJECT
(PNO NUMBER(2),
PNAME VARCHAR(25),
PLOCATION VARCHAR(25),
DNO NUMBER(2),
CONSTRAINT PK_P PRIMARY KEY (PNO),
CONSTRAINT FK_P FOREIGN KEY (DNO)
REFERENCES DEPARTMENT (DNO) ON DELETE CASCADE);


CREATE TABLE WORKSON
(SSN NUMBER(9),
PNO NUMBER(2),
HOURS NUMBER(3),
CONSTRAINT PK_W PRIMARY KEY(SSN,PNO),
CONSTRAINT FK_W FOREIGN KEY (PNO)
REFERENCES PROJECT(PNO) ON DELETE CASCADE,
CONSTRAINT FK_W1 FOREIGN KEY (SSN)
REFERENCES EMPLOYEE(SSN) ON DELETE CASCADE);

#############################################INSERTION####################################################
INSERT INTO EMPLOYEE (SSN,NAME,ADDRESS,SEX,SALLARY,SUPERSSN) VALUES 
(&SSN,'&NAME','&ADDRESS','&SEX',&SALLARY,&SUPERSSN);


INSERT INTO DEPARTMENT VALUES
(&DNO,'&DNAME',&MGRSSN,'&MGRSTARTDATE');

 UPDATE EMPLOYEE SET DNO=(&DNO) WHERE SSN=(&SSN);


INSERT INTO DLOCATION VALUES
(&DNO,'&DLOC');

INSERT INTO PROJECT VALUES 
(&PNO,'&PNAME','&PLOCATION',&DNO);

INSERT INTO WORKSON VALUES
(&SSN,&PNO,&HOURS);

################################################QUERY####################################################
$(SELECT P.PNO FROM PROJECT P,EMPLOYEE E,WORKSON W
WHERE P.PNO=W.PNO
AND W.SSN=E.SSN
AND E.NAME='SCOTT')
UNION 
(SELECT P.PNO FROM PROJECT P,EMPLOYEE E,DEPARTMENT D
WHERE P.DNO=D.DNO
AND D.MGRSSN=E.SSN
AND E.NAME='SCOTT')


$SELECT E.NAME,1.1* E.SALLARY  AS HIKED_SALARY
FROM EMPLOYEE E,PROJECT P,WORKSON W
WHERE P.PNO=W.PNO
AND W.SSN=E.SSN
AND P.PNAME='IOT';

$SELECT SUM(E.SALLARY) AS SUM_SAL,
MIN(E.SALLARY) AS MIN_SAL,
MAX(E.SALLARY) AS MAX_SAL,
AVG(E.SALLARY) AS AVG_SAL
FROM EMPLOYEE E,DEPARTMENT D
WHERE E.DNO=D.DNO
AND D.DNAME='ACCOUNTS';


$SELECT E.NAME FROM EMPLOYEE E
WHERE NOT EXISTS (SELECT * FROM WORKSON W1 WHERE (W1.PNO IN 
(SELECT P.PNO FROM PROJECT P WHERE P.DNO=5)
AND
NOT EXISTS (SELECT * FROM WORKSON W2 WHERE W2.SSN=E.SSN AND W2.PNO=W1.PNO)));

$SELECT DNO,COUNT(*) AS NUM_EMP
FROM EMPLOYEE
WHERE SALLARY>600000 AND DNO 
IN (SELECT DNO  FROM EMPLOYEE GROUP BY DNO HAVING COUNT(DNO)>5)
GROUP BY DNO;
*******************************************************************************************************************************************
*******************************************************************************************************************************************
*******************************************************************************************************************************************
CREATE TABLE STUDENT
(USN VARCHAR(10),
SNAME VARCHAR(20),
ADDRESS VARCHAR(20),
PHONE NUMBER(10),
GENDER CHAR,
CONSTRAINT PK_S PRIMARY KEY(USN));

CREATE TABLE SEMSEC
(SSID VARCHAR(2),
SEM NUMBER(1),
SEC CHAR,
CONSTRAINT PK_SEM PRIMARY KEY (SSID));

CREATE TABLE CLASS
(USN VARCHAR(10),
SSID VARCHAR(2),
CONSTRAINT PK_C PRIMARY KEY (USN,SSID),
CONSTRAINT FK_C FOREIGN KEY (USN)
REFERENCES STUDENT (USN) ON DELETE CASCADE,
CONSTRAINT FK_C1 FOREIGN KEY (SSID)
REFERENCES SEMSEC (SSID) ON DELETE CASCADE);

CREATE TABLE SUBJECT
(SUBCODE VARCHAR(8),
TITLE VARCHAR(15),
SEM NUMBER(1),
CREDITS NUMBER(2),
CONSTRAINTS PK_SUB PRIMARY KEY(SUBCODE)
);

CREATE TABLE IAMARKS
(USN VARCHAR(10),
SUBCODE VARCHAR(8),
SSID VARCHAR(2),
TEST1 NUMBER(2),
TEST2 NUMBER(2),
TEST3 NUMBER(2),
FINALIA NUMBER(3),
CONSTRAINT PK_IA PRIMARY KEY(USN,SUBCODE,SSID),
CONSTRAINT FK_IA FOREIGN KEY (USN)
REFERENCES STUDENT (USN) ON DELETE CASCADE,
CONSTRAINT FK_IA1 FOREIGN KEY (SSID)
REFERENCES SEMSEC (SSID) ON DELETE CASCADE,
CONSTRAINT FK_IA2 FOREIGN KEY (SUBCODE)
REFERENCES SUBJECT (SUBCODE) ON DELETE CASCADE);


INSERT INTO STUDENT VALUES('&USN','&SNAME','&ADDRESS',&PHONE,'&GENDER');

INSERT INTO SEMSEC VALUES ('&SSID',&SEM,'&SEC');

INSERT INTO CLASS VALUES ('&USN','&SSID');

INSERT INTO SUBJECT VALUES ('&SUBCODE','&TITLE',&SEM,&CREDITS);

INSERT INTO IAMARKS(USN,SUBCODE,SSID,TEST1,TEST2,TEST3) VALUES ('&USN','&SUBCODE','&SSID',&TEST1,&TEST2,&TEST3);
 

INSERT INTO STUDENT VALUES('1MV17CS130','MILIND','JAMMU',3333333333,'M');
INSERT INTO STUDENT VALUES('1MV16CS001','ABHIJIT','PUNE',4444444444,'M');
INSERT INTO STUDENT VALUES('1MV16CS060','RAVI','HYDRABAD',5555555555,'M');
INSERT INTO STUDENT VALUES('1MV16CS130','SANJANA','GAWAHATTI',6666666666,'F');
INSERT INTO STUDENT VALUES('1MV15CS001','ANSHUMAN','PUNJAB',7777777777,'M');
INSERT INTO STUDENT VALUES('1MV15CS060','AMRITA','BANGALORE',8888888888,'F');
INSERT INTO STUDENT VALUES('1MV15CS130','BHUVINESH','JAIPUR',9999999999,'M');
INSERT INTO STUDENT VALUES('1MV14CS001','DEVYANI','BANGALORE',0000000000,'F');
INSERT INTO STUDENT VALUES('1MV14CS060','DAVID','KOCHI',1122334455,'M');
INSERT INTO STUDENT VALUES('1MV14CS130','AISHVARY','MUMBSI',2233445566,'F');

INSERT INTO SEMSEC VALUES ('2B',2,'B');
INSERT INTO SEMSEC VALUES ('2C',2,'C');
INSERT INTO SEMSEC VALUES ('4A',4,'A');
INSERT INTO SEMSEC VALUES ('4B',4,'B');
INSERT INTO SEMSEC VALUES ('4C',4,'C');
INSERT INTO SEMSEC VALUES ('6A',6,'A');
INSERT INTO SEMSEC VALUES ('6B',6,'B');
INSERT INTO SEMSEC VALUES ('6C',6,'C');
INSERT INTO SEMSEC VALUES ('8A',8,'A');
INSERT INTO SEMSEC VALUES ('8B',8,'B');
INSERT INTO SEMSEC VALUES ('8C',8,'C');

INSERT INTO CLASS VALUES ('1MV17CS001','2A');
INSERT INTO CLASS VALUES ('1MV17CS060','2B');
INSERT INTO CLASS VALUES ('1MV17CS130','2C');
INSERT INTO CLASS VALUES ('1MV16CS001','4A');
INSERT INTO CLASS VALUES ('1MV16CS060','4B');
INSERT INTO CLASS VALUES ('1MV16CS130','4C');
INSERT INTO CLASS VALUES ('1MV15CS001','6A');
INSERT INTO CLASS VALUES ('1MV15CS060','6B');
INSERT INTO CLASS VALUES ('1MV15CS130','6C');
INSERT INTO CLASS VALUES ('1MV14CS001','8A');
INSERT INTO CLASS VALUES ('1MV14CS060','8B');
INSERT INTO CLASS VALUES ('1MV14CS130','8C');

INSERT INTO SUBJECT VALUES ('15CS21','M2',2,4);
INSERT INTO SUBJECT VALUES ('15PCD23','PCD',2,4);
INSERT INTO SUBJECT VALUES ('15CS42','SE',4,4);
INSERT INTO SUBJECT VALUES ('15CS46','MP',4,4);
INSERT INTO SUBJECT VALUES ('15CS64','CG',6,4);
INSERT INTO SUBJECT VALUES ('15CS62','UXP',6,4);
INSERT INTO SUBJECT VALUES ('15CS81','SA',8,4);
INSERT INTO SUBJECT VALUES ('15CS842','ST',8,3);

INSERT INTO IAMARKS(USN,SUBCODE,SSID,TEST1,TEST2,TEST3) VALUES ('1MV17CS001','15CS21','2A',10,20,7);
INSERT INTO IAMARKS(USN,SUBCODE,SSID,TEST1,TEST2,TEST3) VALUES ('1MV17CS060','15PCD23','2B',18,5,12);
INSERT INTO IAMARKS(USN,SUBCODE,SSID,TEST1,TEST2,TEST3) VALUES ('1MV17CS130','15CS21','2C',6,14,17);
INSERT INTO IAMARKS(USN,SUBCODE,SSID,TEST1,TEST2,TEST3) VALUES ('1MV16CS001','15CS42','4A',4,15,19);
INSERT INTO IAMARKS(USN,SUBCODE,SSID,TEST1,TEST2,TEST3) VALUES ('1MV16CS060','15CS46','4B',12,9,17);
INSERT INTO IAMARKS(USN,SUBCODE,SSID,TEST1,TEST2,TEST3) VALUES ('1MV16CS130','15CS42','4C',10,5,2);
INSERT INTO IAMARKS(USN,SUBCODE,SSID,TEST1,TEST2,TEST3) VALUES ('1MV15CS001','15CS64','6A',7,13,19);
INSERT INTO IAMARKS(USN,SUBCODE,SSID,TEST1,TEST2,TEST3) VALUES ('1MV15CS060','15CS42','6B',18,12,9);
INSERT INTO IAMARKS(USN,SUBCODE,SSID,TEST1,TEST2,TEST3) VALUES ('1MV15CS130','15CS64','6C',13,17,5);
INSERT INTO IAMARKS(USN,SUBCODE,SSID,TEST1,TEST2,TEST3) VALUES ('1MV14CS001','15CS81','8A',9,12,18);
INSERT INTO IAMARKS(USN,SUBCODE,SSID,TEST1,TEST2,TEST3) VALUES ('1MV14CS060','15CS842','8B',14,8,17);
INSERT INTO IAMARKS(USN,SUBCODE,SSID,TEST1,TEST2,TEST3) VALUES ('1MV14CS130','15CS81','8C',6,13,18);


######################################################QUERY###################################################
SELECT * FROM STUDENT S,CLASS C,SEMSEC SS
WHERE S.USN=C.USN
AND C.SSID=SS.SSID
AND SS.SSID='4C';

SELECT SS.SEM,SS.SEC,S.GENDER,COUNT(S.GENDER)
FROM STUDENT S,CLASS C,SEMSEC SS
WHERE S.USN=C.USN
AND C.SSID=SS.SSID
GROUP BY SS.SEM,SS.SEC,S.GENDER
ORDER BY SEM;

CREATE VIEW TEST1MARKS AS
   SELECT TEST1,SUBCODE FROM IAMARKS
   WHERE USN='1MV15CS060';

CREATE OR REPLACE PROCEDURE AVGMARKS
IS
CURRSOR C_IAMARKS IS
SELECT GREATEST(TEST1,TEST2) AS A,
GREATEST(TEST1,TEST3) AS B,
GREATEST(TEST3,TEST2) AS C
FROM IAMARKS
WHERE 
FINALIA IS NULL
FOR UPDATE;
C_A NUMBER;
C_B NUMBER;
C_C NUMBER;
C_SUM NUMBER;
C_AVG NUMBER;
BEGIN
OPEN C_IAMARKS;
LOOP
FETCH C_IAMARKS INTO C_A,C_B,C_C;
EXIT WHEN C_IAMARKS%NOT FOUND;
DBMS_OUTPUT.PUT_LINE (A||''||B||''||C);
IF(C_A!=C_B)THEN
C_SUM=C_A+C_B;
ELSE
C_SUM=C_A+C_C;
END IT;
C_AVG=C_SUM/2;
DBMS_OUTPUT.PUT_LINE('SUM'=||C_SUM);
DBMS_OUTPUT.PUT_LINE('AVG'=||C_AVG);
UPDATE IAMARKS SET FINALIA=C_AVG
WHERE CURRENT OF C_IAMARKS;
END LOOP;
CLOSE C_IAMARKS;
END;

BEGIN
AVGMARKS;
END;

UPDATE IAMARKS SET FINALIA=((TEST1+TEST2+TEST3)-LEAST(TEST1,TEST2,TEST3))/2;


SELECT S.USN,S.SNAME,S.ADDRESS,S.PHONE,S.GENDER,
(CASE
WHEN IA.FINALIA BETWEEN 17 AND 20 THEN 'OUTSTANDING'
WHEN IA.FINALIA BETWEEN 12 AND 16 THEN 'AVERAGE'
ELSE 'WEAK'
END) AS CAT FROM STUDENT S,SEMSEC SS,IAMARKS IA
WHERE S.USN=IA.USN
AND SS.SSID=IA.SSID
AND SS.SEM=8;